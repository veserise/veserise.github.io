extends head-layout.pug

append header
  div.container-fluid.container-wd.mb-5
    div.shadow.p-3.mb-5.mt-5.bg-white.rounded
      blockquote.blockquote.mt-2
        h4.display-4= vote.title
        p.blockquote-footer.mt-3= vote.desc
          - var single = vote.singleSelection == '1' ? true : false
          if single
            b.text-success.ml-4= '[单选]'
          else 
            b.text-success.ml-4= '[多选]'
      div.form-group.mt-5
        - var isdisabled = vote.userid == user.id ? true: false
        if isdisabled
          ul.list-group(data-voteid=vote.id disabled=true)#option-list
            each option in options
              li.list-group-item(data-optionid= option.id)
                if single
                  input.toggle(type="radio" id="select" name="select")
                else
                  input.toggle(type="checkbox" id="select" name="select")
                label.mb-3.select-label(for="select")= option.content
                span.float-right(data-countid= option.id)
        else 
          ul.list-group(data-voteid=vote.id)#option-list
            each option in options
              li.list-group-item(data-optionid= option.id) 
                if single
                  input.toggle(type="radio" id="select" name="select")
                else
                  input.toggle(type="checkbox" id="select" name="select")
                label.mb-3.select-label(for="select")= option.content
                span(data-countid= option.id)
        button#btn_back.btn.btn-outline-success.mt-3.float-left(type="button") 返 回
        button#btn_next.btn.btn-outline-success.mt-3.float-right(type="button" data-voteid= vote.id) 下一题
      p.lead= vote.deadline

    
  script(src="/socket.io/socket.io.js")
  script.
    var btn_back =document.querySelector('#btn_back')
    var btn_next =document.querySelector('#btn_next')
    var optionList = document.querySelector('#option-list')

    function updateState(voteResult) {
      var counted = _.countBy(voteResult, 'optionid')
      _.forEach(counted, (val, key) => {
        document.querySelector(`[data-countid="${key}"]`).textContent = ' /' + val +'票'
      })
    }

    async function main() {
      var voteResult = (await axios.get(`/voteup/${optionList.dataset.voteid}/info`)).data

      if (voteResult == null) {
        voteResult = []
      }

      //- var socket = io()

      //- socket.on('new vote', data => {
      //-   voteResult.push(data)
      //-   updateState(voteResult)
      //- })

      updateState(voteResult)
    }

    main()

    optionList.addEventListener('click', async e => {
      if(e.target.matches('li')){
        var optionid = e.target.dataset.optionid
      }
      if( e.target.matches('li > input') ||  e.target.matches('li > label') ||  e.target.matches('li > span')){
         var optionid = e.target.parentNode.dataset.optionid
      }
      console.log(e.target)

      var voteResult = (await axios.post('/voteup', {
        voteid: optionList.dataset.voteid,
        optionid: optionid
      })).data

      updateState(voteResult)
    })

    btn_back.addEventListener('click',  e => {
      location.href = '/'
    })
    
    btn_next.addEventListener('click',  e => {
      var idx = parseInt(btn_next.dataset.voteid) + 1
      location.href = '/vote/'+ idx
    })
